name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest
    env:
      REGISTRY: docker.io
      IMAGE_OWNER: ${{ secrets.DOCKERHUB_USERNAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build and test all microservices
        run: |
          ./mvnw clean package -DskipTests=false

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          for service in admin-server api-gateway config-server customers-service discovery-server vets-service visits-service; do
            docker build -t $REGISTRY/$IMAGE_OWNER/spring-petclinic-$service:latest spring-petclinic-$service
            docker push $REGISTRY/$IMAGE_OWNER/spring-petclinic-$service:latest
          done

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
        run: |
          echo "$KUBECONFIG_DATA" | base64 -d > kubeconfig
          export KUBECONFIG=$PWD/kubeconfig
          kubectl apply -f k8s/
